- hosts: myhost  # playbook to setup system as root
  vars:
    services:
      - mongodb.service
      - media-search.service
  become: true
  tasks:
    - name: Updates package lists for upgrades/new pkg, then upgrades all current packages to the latest version
      apt: upgrade=dist update_cache=yes
    - name: Install latest version of packages
      package: name="{{item}}" state=latest
      with_items:
        - python3-pip
        - virtualenv
        - git
        - nginx
        - fail2ban
    - name: Add mongodb repo apt_key
      apt_key: keyserver=hkp://keyserver.ubuntu.com:80 id=EA312927
    - name: Add mongodb sources list
      shell: "echo 'deb http://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/3.2 multiverse' | sudo tee /etc/apt/sources.list.d/mongodb-org-3.2.list"
      changed_when: false
    - name: Update repositories cache and install "mongodb-org" package
      apt: name=mongodb-org update_cache=yes
    - name: Firewall turn on and allow OpenSSH
      ufw: rule=allow name=OpenSSH state=enabled
    - name: Firewall allow nginx  # should be deleted after manual ssl install
      ufw: rule=allow name="Nginx HTTP"
    - name: Firewall allow nginx
      ufw: rule=allow name="Nginx HTTPS"
    - name: Copy services
      copy:
        src: /home/awcrosby/media-search/config/{{item}}
        dest: /etc/systemd/system/{{item}}
      with_items: "{{services}}"
    - name: Start and enable on startup the services
      service: name="{{item}}" state=started enabled=yes
      with_items: "{{services}}"
- hosts: myhost  # playbook to setup code environment
  vars:
    githubuser: awcrosby@gmail.com
    services:
      - nginx
      - fail2ban
  tasks:
    - name: Make project directory
      file: path=/home/awcrosby/media-search/ state=directory
    - name: Git clone media-search repo
      git:
        repo: https://{{ githubuser | urlencode }}:{{ githubpw }}@github.com/awcrosby/media-search.git
        dest: /home/awcrosby/media-search
    - name: Create virtual environment and install pip packages
      pip:
        requirements: /home/awcrosby/media-search/requirements.txt
        virtualenv: /home/awcrosby/media-search/venv
    - name: Copy nginx config to replace the default
      copy:
        src: /home/awcrosby/media-search/config/nginx_config_pre_ssl
        dest: /etc/nginx/sites-available/default
    - name: Copy fail2ban config
      copy:
        src: /home/awcrosby/media-search/config/jail.local
        dest: /etc/fail2bani/
      become: true
    - name: Restart services
      service: name="{{item}}" state=restarted
      become: true
      changed_when: false
      with_items: "{{services}}"
